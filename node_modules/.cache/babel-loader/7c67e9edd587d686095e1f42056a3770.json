{"ast":null,"code":"var _jsxFileName = \"/Users/jonathangraziani/monsters-rolodex/src/App.js\";\nimport React, { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.components';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      //we are creating an array here\n      //nomrally would not hard code data here we would fetch from an api here in this array\n      monsters: [],\n      searchField: ''\n    };\n  } //this is a lifecycle method\n  // this is for fetching APIs\n\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState({\n      monsters: users\n    })); //users was the file name in the jsonplaceholder uptop\n  }\n\n  render() {\n    const _this$state = this.state,\n          monsters = _this$state.monsters,\n          searchField = _this$state.searchField; //top is easy way of writing this.\n    //const monsters = this.state.monsters;\n    //const searchField = this.state.searchField;\n\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLocaleLowerCase()));\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(SearchBox, {\n      placeholder: \"search monsters\",\n      handleChange: e => this.setState({\n        searchField: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(CardList, {\n      monsters: filteredMonsters,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }));\n  }\n\n} //this was used before we created the search field <CardList monsters={this.state.monsters}></CardList>\n//this was old <input \n//type='search' \n//placeholder='search monsters' \n//onChange={e => this.setState({searchField: e.target.value})} />\n//<CardList monsters={filteredMonsters}></CardList>\n\n\nexport default App;","map":{"version":3,"sources":["/Users/jonathangraziani/monsters-rolodex/src/App.js"],"names":["React","Component","CardList","SearchBox","App","constructor","state","monsters","searchField","componentDidMount","fetch","then","response","json","users","setState","render","filteredMonsters","filter","monster","name","toLowerCase","includes","toLocaleLowerCase","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAAQC,QAAR,QAAuB,4CAAvB;AAEA,SAAQC,SAAR,QAAwB,+CAAxB;AAEA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAC1BI,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,KAAL,GAAa;AACX;AACA;AACAC,MAAAA,QAAQ,EAAE,EAHC;AAIXC,MAAAA,WAAW,EAAE;AAJF,KAAb;AAMD,GAVyB,CAY1B;AACF;;;AACEC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,KAAK,IAAI,KAAKC,QAAL,CAAc;AAAER,MAAAA,QAAQ,EAAEO;AAAZ,KAAd,CAFf,EADkB,CAGgC;AACnD;;AAEDE,EAAAA,MAAM,GAAG;AAAA,wBACyB,KAAKV,KAD9B;AAAA,UACAC,QADA,eACAA,QADA;AAAA,UACUC,WADV,eACUA,WADV,EAEP;AACA;AACA;;AAEA,UAAMS,gBAAgB,GAAGV,QAAQ,CAACW,MAAT,CAAgBC,OAAO,IAC9CA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCd,WAAW,CAACe,iBAAZ,EAApC,CADuB,CAAzB;AAGA,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,SAAD;AACE,MAAA,WAAW,EAAC,iBADd;AAEE,MAAA,YAAY,EAAEC,CAAC,IAAI,KAAKT,QAAL,CAAc;AAACP,QAAAA,WAAW,EAAEgB,CAAC,CAACC,MAAF,CAASC;AAAvB,OAAd,CAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAOE,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAET,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADF;AAYD;;AAzCyB,C,CA4C5B;AACA;AACQ;AACA;AACA;AACA;;;AACR,eAAeb,GAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport {CardList} from './components/card-list/card-list.component';\n\nimport {SearchBox} from './components/search-box/search-box.components';\n\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      //we are creating an array here\n      //nomrally would not hard code data here we would fetch from an api here in this array\n      monsters: [],\n      searchField: ''  \n    };\n  }\n\n  //this is a lifecycle method\n// this is for fetching APIs\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({ monsters: users}));//users was the file name in the jsonplaceholder uptop\n  }\n\n  render() {\n    const {monsters, searchField} = this.state;\n    //top is easy way of writing this.\n    //const monsters = this.state.monsters;\n    //const searchField = this.state.searchField;\n\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLocaleLowerCase()))\n\n    return (\n      <div className=\"App\">\n\n        <SearchBox\n          placeholder='search monsters' \n          handleChange={e => this.setState({searchField: e.target.value})}\n        />\n\n        <CardList monsters={filteredMonsters}>\n        </CardList>\n    </div>\n    )\n  }\n}\n\n//this was used before we created the search field <CardList monsters={this.state.monsters}></CardList>\n//this was old <input \n        //type='search' \n        //placeholder='search monsters' \n        //onChange={e => this.setState({searchField: e.target.value})} />\n        //<CardList monsters={filteredMonsters}></CardList>\nexport default App;\n"]},"metadata":{},"sourceType":"module"}